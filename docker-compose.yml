version: '3.8'

services:
    redis-service:
        image: redis:alpine
        container_name: redis-service
        ports:
            - "6379:6379"
        restart: unless-stopped

    mysql-service:
        image: mysql:8.0
        container_name: mysql-service
        environment:
            MYSQL_ROOT_PASSWORD: rootpassword
            MYSQL_DATABASE: beautybay_db
            MYSQL_USER: beautybay
            MYSQL_PASSWORD: beautybaypassword
        ports:
            - "3306:3306"
        volumes:
            - mysql-data:/var/lib/mysql
        restart: unless-stopped

    mongo-service:
        image: mongo:5.0
        container_name: mongo-service
        environment:
            MONGO_INITDB_ROOT_USERNAME: root
            MONGO_INITDB_ROOT_PASSWORD: rootpassword
        ports:
            - "27017:27017"
        volumes:
            - mongo-data:/data/db
        restart: unless-stopped

    product-service:
        build:
            context: ./product-service
            dockerfile: Dockerfile
        container_name: product-service
        environment:
            - APP_ENV=local
            - APP_DEBUG=true
            - REDIS_HOST=redis-service
            - DB_CONNECTION=mysql
            - DB_HOST=mysql-service
            - DB_PORT=3306
            - DB_DATABASE=beautybay_db
            - DB_USERNAME=beautybay
            - DB_PASSWORD=beautybaypassword
            - MONGO_HOST=mongo-service
            - MONGO_PORT=27017
            - MONGO_USERNAME=root
            - MONGO_PASSWORD=rootpassword
        ports:
            - "9001:9000"  # Exposing this to the host for better access, 9001 to 9000
        volumes:
            - ./product-service:/var/www/html
        depends_on:
            - redis-service
            - mysql-service
            - mongo-service
        restart: unless-stopped

    nginx-product:
        image: nginx:latest
        container_name: nginx-product
        ports:
            - "8001:80"
        volumes:
            - ./product-service/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./product-service:/var/www/html
        depends_on:
            - product-service
        restart: unless-stopped

    cart-service:
        build:
            context: ./cart-service
            dockerfile: Dockerfile
        container_name: cart-service
        environment:
            - APP_ENV=local
            - APP_DEBUG=true
            - REDIS_HOST=redis-service
            - DB_CONNECTION=mysql
            - DB_HOST=mysql-service
            - DB_PORT=3306
            - DB_DATABASE=beautybay_db
            - DB_USERNAME=beautybay
            - DB_PASSWORD=beautybaypassword
            - MONGO_HOST=mongo-service
            - MONGO_PORT=27017
            - MONGO_USERNAME=root
            - MONGO_PASSWORD=rootpassword
        ports:
            - "9002:9000"  # Exposing this to the host for better access, 9002 to 9000
        volumes:
            - ./cart-service:/var/www/html
        depends_on:
            - redis-service
            - mysql-service
            - mongo-service
        restart: unless-stopped

    nginx-cart:
        image: nginx:latest
        container_name: nginx-cart
        ports:
            - "8002:80"
        volumes:
            - ./cart-service/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./cart-service:/var/www/html
        depends_on:
            - cart-service
        restart: unless-stopped

    order-service:
        build:
            context: ./order-service
            dockerfile: Dockerfile
        container_name: order-service
        environment:
            - APP_ENV=local
            - APP_DEBUG=true
            - REDIS_HOST=redis-service
            - DB_CONNECTION=mysql
            - DB_HOST=mysql-service
            - DB_PORT=3306
            - DB_DATABASE=beautybay_db
            - DB_USERNAME=beautybay
            - DB_PASSWORD=beautybaypassword
            - MONGO_HOST=mongo-service
            - MONGO_PORT=27017
            - MONGO_USERNAME=root
            - MONGO_PASSWORD=rootpassword
        ports:
            - "9003:9000"  # Exposing this to the host for better access, 9003 to 9000
        volumes:
            - ./order-service:/var/www/html
        depends_on:
            - redis-service
            - mysql-service
            - mongo-service
        restart: unless-stopped

    nginx-order:
        image: nginx:latest
        container_name: nginx-order
        ports:
            - "8003:80"
        volumes:
            - ./order-service/nginx/nginx.conf:/etc/nginx/nginx.conf
            - ./order-service:/var/www/html
        depends_on:
            - order-service
        restart: unless-stopped

volumes:
    mysql-data:
    mongo-data:
